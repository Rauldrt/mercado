{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps } from \"firebase/app\";\nimport { getFirestore, collection, getDocs, doc, getDoc, addDoc, updateDoc, deleteDoc, query, where, setDoc } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\nimport type { Product, Promotion, Customer } from './types';\n\n\nconst firebaseConfig = {\n  projectId: \"ndera-store\",\n  appId: \"1:986534409565:web:2267108c210a31c98364b4\",\n  storageBucket: \"ndera-store.firebasestorage.app\",\n  apiKey: \"AIzaSyBHbCbynS3EIcHcU6Ib_iVEcNSh-K4rJDQ\",\n  authDomain: \"ndera-store.firebaseapp.com\",\n  measurementId: \"\",\n  messagingSenderId: \"986534409565\",\n};\n\n// Initialize Firebase\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst db = getFirestore(app);\nconst auth = getAuth(app);\n\nconst productsCollection = collection(db, 'products');\nconst promotionsCollection = collection(db, 'promotions');\nconst customersCollection = collection(db, 'customers');\nconst settingsCollection = collection(db, 'settings');\n\n// Helper to convert Firestore doc to a given type\nconst docToType = <T>(doc: any): T => {\n    const data = doc.data();\n    return {\n        id: doc.id,\n        ...data,\n    };\n}\n\n// Product Operations\nexport const getProducts = async (): Promise<Product[]> => {\n    const snapshot = await getDocs(productsCollection);\n    return snapshot.docs.map(doc => docToType<Product>(doc));\n}\n\nexport const getProductById = async (id: string): Promise<Product | undefined> => {\n    const docRef = doc(db, 'products', id);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n        return docToType<Product>(docSnap);\n    }\n    return undefined;\n}\n\nexport const getProductsByVendor = async (vendorName: string): Promise<Product[]> => {\n    const q = query(productsCollection, where(\"vendor\", \"==\", vendorName));\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => docToType<Product>(doc));\n}\n\nexport const getProductsByVendorId = async (vendorId: string): Promise<Product[]> => {\n    const q = query(productsCollection, where(\"vendorId\", \"==\", vendorId));\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => docToType<Product>(doc));\n}\n\nexport const addProduct = async (product: Omit<Product, 'id'>): Promise<string> => {\n    const docRef = await addDoc(productsCollection, product);\n    return docRef.id;\n}\n\nexport const updateProduct = async (id: string, productUpdate: Partial<Omit<Product, 'id'>>): Promise<void> => {\n    const docRef = doc(db, 'products', id);\n    await updateDoc(docRef, productUpdate);\n}\n\nexport const deleteProduct = async (id: string): Promise<void> => {\n    const docRef = doc(db, 'products', id);\n    await deleteDoc(docRef);\n}\n\n// Promotion Operations\nexport const getPromotions = async (): Promise<Promotion[]> => {\n    const snapshot = await getDocs(promotionsCollection);\n    return snapshot.docs.map(doc => docToType<Promotion>(doc));\n}\n\nexport const addPromotion = async (promotion: Omit<Promotion, 'id'>): Promise<string> => {\n    const docRef = await addDoc(promotionsCollection, promotion);\n    return docRef.id;\n}\n\nexport const updatePromotion = async (id: string, promotionUpdate: Partial<Omit<Promotion, 'id'>>): Promise<void> => {\n    const docRef = doc(db, 'promotions', id);\n    await updateDoc(docRef, promotionUpdate);\n}\n\nexport const deletePromotion = async (id: string): Promise<void> => {\n    const docRef = doc(db, 'promotions', id);\n    await deleteDoc(docRef);\n}\n\n// Customer Operations\nexport const getCustomers = async (): Promise<Customer[]> => {\n    const snapshot = await getDocs(customersCollection);\n    return snapshot.docs.map(doc => docToType<Customer>(doc));\n}\n\nexport const addCustomer = async (customer: Omit<Customer, 'id'>): Promise<string> => {\n    // Check if customer already exists by email\n    const q = query(customersCollection, where(\"email\", \"==\", customer.email));\n    const snapshot = await getDocs(q);\n    if (!snapshot.empty) {\n        // Customer exists, let's update their purchase history\n        const existingCustomerDoc = snapshot.docs[0];\n        const existingCustomerData = docToType<Customer>(existingCustomerDoc);\n        const updatedHistory = [...existingCustomerData.purchaseHistory, ...customer.purchaseHistory];\n        await updateDoc(existingCustomerDoc.ref, { purchaseHistory: updatedHistory });\n        return existingCustomerDoc.id;\n    }\n    // New customer, add them\n    const docRef = await addDoc(customersCollection, customer);\n    return docRef.id;\n}\n\nexport const updateCustomer = async (id: string, customerUpdate: Partial<Omit<Customer, 'id'>>): Promise<void> => {\n    const docRef = doc(db, 'customers', id);\n    await updateDoc(docRef, customerUpdate);\n}\n\nexport const deleteCustomer = async (id: string): Promise<void> => {\n    const docRef = doc(db, 'customers', id);\n    await deleteDoc(docRef);\n}\n\n\n// Settings Operations\nexport const getSetting = async (settingId: string): Promise<string | null> => {\n    const docRef = doc(db, 'settings', settingId);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n        return docSnap.data().value;\n    }\n    return null;\n}\n\nexport const updateSetting = async (settingId: string, value: string): Promise<void> => {\n    const docRef = doc(db, 'settings', settingId);\n    // Use setDoc with merge: true to create the document if it doesn't exist, or update it if it does.\n    await setDoc(docRef, { value }, { merge: true });\n}\n\n\nexport { app, auth };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 449, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/test-firebase/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useEffect, useState } from 'react';\nimport { getProducts } from '@/lib/firebase';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Loader2, CheckCircle, XCircle } from 'lucide-react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\n\nexport default function TestFirebasePage() {\n  const [status, setStatus] = useState<'loading' | 'success' | 'error'>('loading');\n  const [error, setError] = useState<string | null>(null);\n  const [productCount, setProductCount] = useState(0);\n\n  useEffect(() => {\n    const testConnection = async () => {\n      try {\n        // Intencionadamente pedimos los productos para probar la lectura de Firestore\n        const products = await getProducts();\n        setProductCount(products.length);\n        setStatus('success');\n      } catch (e: any) {\n        console.error(\"Firebase connection test failed:\", e);\n        setError(e.message);\n        setStatus('error');\n      }\n    };\n\n    testConnection();\n  }, []);\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 flex justify-center items-center min-h-[60vh]\">\n      <Card className=\"w-full max-w-lg text-center\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-headline\">Prueba de Conexión con Firebase</CardTitle>\n        </CardHeader>\n        <CardContent className=\"flex flex-col items-center gap-4 p-6\">\n          {status === 'loading' && (\n            <>\n              <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n              <p className=\"text-muted-foreground mt-2\">Probando conexión con Firestore...</p>\n            </>\n          )}\n          {status === 'success' && (\n            <>\n              <CheckCircle className=\"h-16 w-16 text-green-500\" />\n              <p className=\"font-semibold text-xl mt-2\">¡Conexión Exitosa!</p>\n              <p className=\"text-muted-foreground text-center\">\n                Se ha conectado correctamente a Firestore y se han encontrado {productCount} productos en tu colección.\n              </p>\n            </>\n          )}\n          {status === 'error' && (\n            <>\n              <XCircle className=\"h-16 w-16 text-destructive\" />\n              <p className=\"font-semibold text-xl mt-2\">Error de Conexión</p>\n              <p className=\"text-muted-foreground text-center\">\n                No se pudo conectar a Firebase. Revisa la consola del navegador y la configuración de tu proyecto.\n              </p>\n              <Card className=\"bg-destructive/10 border-destructive/20 text-left w-full mt-4\">\n                  <CardContent className=\"p-3\">\n                    <p className=\"text-sm font-mono text-destructive\">{error}</p>\n                  </CardContent>\n              </Card>\n            </>\n          )}\n           <Button asChild className=\"mt-6\">\n                <Link href=\"/\">Volver al Inicio</Link>\n           </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAPA;;;;;;;;AASe,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmC;IACtE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB;YACrB,IAAI;gBACF,8EAA8E;gBAC9E,MAAM,WAAW,MAAM,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD;gBACjC,gBAAgB,SAAS,MAAM;gBAC/B,UAAU;YACZ,EAAE,OAAO,GAAQ;gBACf,QAAQ,KAAK,CAAC,oCAAoC;gBAClD,SAAS,EAAE,OAAO;gBAClB,UAAU;YACZ;QACF;QAEA;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;8BACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAyB;;;;;;;;;;;8BAEhD,8OAAC,gIAAA,CAAA,cAAW;oBAAC,WAAU;;wBACpB,WAAW,2BACV;;8CACE,8OAAC,iNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;8CACnB,8OAAC;oCAAE,WAAU;8CAA6B;;;;;;;;wBAG7C,WAAW,2BACV;;8CACE,8OAAC,2NAAA,CAAA,cAAW;oCAAC,WAAU;;;;;;8CACvB,8OAAC;oCAAE,WAAU;8CAA6B;;;;;;8CAC1C,8OAAC;oCAAE,WAAU;;wCAAoC;wCACgB;wCAAa;;;;;;;;;wBAIjF,WAAW,yBACV;;8CACE,8OAAC,4MAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;8CACnB,8OAAC;oCAAE,WAAU;8CAA6B;;;;;;8CAC1C,8OAAC;oCAAE,WAAU;8CAAoC;;;;;;8CAGjD,8OAAC,gIAAA,CAAA,OAAI;oCAAC,WAAU;8CACZ,cAAA,8OAAC,gIAAA,CAAA,cAAW;wCAAC,WAAU;kDACrB,cAAA,8OAAC;4CAAE,WAAU;sDAAsC;;;;;;;;;;;;;;;;;;sCAK5D,8OAAC,kIAAA,CAAA,SAAM;4BAAC,OAAO;4BAAC,WAAU;sCACrB,cAAA,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM/B","debugId":null}}]
}